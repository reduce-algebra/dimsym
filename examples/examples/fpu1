% fpu

% The Fermi-Pasta_Ulam equation.

% Date: Tue, 24 Nov 92 08:37:31 +1100
% From: fackerell_e@maths.su.oz.au (Ted Fackerell)

%load packages
load dimsym23$

symbolic (!*liesublimit:=60);


on gc;
tracecute();

freeunknown k;

depend k,u 2;

loaddeq( u(1,1) =      u(2)  );
loaddeq( u(1,2) =      u(3)  );
loaddeq( u(3,1) =     u(2,2) );   % This is an integrability condition!
loaddeq( u(3,2) = k^2*u(2,1) );
                                  % But there is still another integrability condition
                                  % which needs to be satisfied!!!
                                  % We look later to see if it makes any difference...

%loaddeq( u(2,2,2) = k^2*u(2,1,1) + 2*k*df(k,u(2))*u(2,1)^2 );


mkdets(point);

solvedets stdform1;
solvedets std;
showdets();
mkgens();
stats();

for i:=1:3 do q i:=newarb x 1,x 2,u 1,u 2,u 3,u(2,1),u(2,2);
deteqn 1:=liesub( phi 1 - Q 1 - u(1,1)*xi 1 - u(1,2)*xi 2 );
deteqn 2:=liesub( phi 2 - Q 2 - u(2,1)*xi 1 - u(2,2)*xi 2 );
deteqn 3:=liesub( phi 3 - Q 3 - u(3,1)*xi 1 - u(2,2)*xi 2 );
adddets();

solvedets std;
showdets mkgens();
pause;

sv:=prolong(2,symvec)$
inteqn := u(2,2,2) - k^2*u(2,1,1) - 2*k*df(k,u(2))*u(2,1)^2; 
tst:=vecder(sv,inteqn);
tst:=liesub tst;
let u(2,2,2) = k^2*u(2,1,1) + 2*k*df(k,u(2))*u(2,1)^2;
tst:=tst;
deteqn 1:=tst;
adddets();
solvedets std;
showdets();
mkgens();
stats();

end;
