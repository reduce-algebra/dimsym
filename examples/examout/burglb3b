%%%%%%%%%%THIS HEADER WILL NOT APPEAR ON ACTUAL RUN%%%%%%%%%%
% Last tested on:
% Fri Feb  6 11:44:52 EST 2004
% With:
% Dimsym.2.3
% Running on:
% Reduce.3.7
%%%%%%%%%%%%%%%%%%%%%END HEADER%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Loading image file: /home/zib/reduce/lisp/psl/alphalinux/red/reduce.img 
REDUCE 3.7, 15-Apr-1999 ...

1: % burglb3

% burgers equation as in bluman & kumei,
% eqn 5.14a, pg 264

% Find 3rd order lie-backlund symmetries.

load dimsym23$

Dimsym 2.3, 12-October-1999. 
Symmetry determination and linear D.E. package
(c) 1992, 1993 James Sherring; 1997 James Sherring and Geoff Prince
Any publication resulting from these calculations must reference this program.
Users are free to modify this program but it is not to be redistributed
in modified form.


loaddeq( u(1,2,2) = u(1,1) + u(1)*u(1,2) );


1


xi(1):=0;


xi(1) := 0

xi(2):=0;


xi(2) := 0

depend phi(1), x(1),x(2), u(1), u(1,2),u(1,1), u(1,2,1);



mkdets custom1;


solvedets std;

Solving equations using std algorithm.

 Forming prolongation of equation for (u 1 2 2) to get equation for (u 1 2 2 1)

There are 0 equations remaining.


mkgens();


There are 9 symmetries found.

The generators of the finite algebra are:

Gen(1) = @    *u(1,2)
          u(1)

                               2           2     2              2     2
Gen(2) = @    *(4*u(1,2,1)*x(1)  - 2*u(1,2) *x(1)  + u(1,2)*u(1) *x(1)
          u(1)

                              2                                     2
                 + u(1,2)*x(2)  + 6*u(1,2)*x(1) - 2*u(1,1)*u(1)*x(1)

                                              2
                 + 4*u(1,1)*x(2)*x(1) - 2*u(1) *x(1) + 2*u(1)*x(2))

                                          2                   2
Gen(3) = @    *(4*u(1,2,1)*x(1) - 2*u(1,2) *x(1) + u(1,2)*u(1) *x(1)
          u(1)

                                                            2
                 - 2*u(1,1)*u(1)*x(1) + 2*u(1,1)*x(2) - u(1) )

                                     2              2
Gen(4) = @    *(4*u(1,2,1) - 2*u(1,2)  + u(1,2)*u(1)  - 2*u(1,1)*u(1))
          u(1)

Gen(5) = @    *u(1,1)
          u(1)

Gen(6) = @    *(u(1,2)*x(2) + 2*u(1,1)*x(1) + u(1))
          u(1)

Gen(7) = @    *( - u(1,2)*x(1) + 1)
          u(1)

                                                 2
Gen(8) = @    *( - u(1,2)*x(2)*x(1) - u(1,1)*x(1)  - u(1)*x(1) + x(2))
          u(1)

                                  3           2     3              2     3
Gen(9) = @    *( - 4*u(1,2,1)*x(1)  + 2*u(1,2) *x(1)  - u(1,2)*u(1) *x(1)
          u(1)

                                2                      2                     3
                 - 3*u(1,2)*x(2) *x(1) - 12*u(1,2)*x(1)  + 2*u(1,1)*u(1)*x(1)

                                     2         2     2
                 - 6*u(1,1)*x(2)*x(1)  + 3*u(1) *x(1)  - 6*u(1)*x(2)*x(1)

                         2
                 + 3*x(2)  + 6*x(1))


stats();


Time: 256 ms

Total of 71 equations used, with 23 new arbitrary functions made.

successful operations were :((op*intslv 12) (op*simpeq 34) (op*splitec 14) (
op*shr1tm 7) (op*slvspl 1) (op*exp1tm 2) (op*proexp 1))

Variables used to split determining equations were ((x 2) (u 1) (u 1 2) (u 1 1)
(u 1 2 1) (u 1 1 1))


end;

2: 
3: 
4: 
5: 
6: 
*** End-of-file read 

Quitting
