%%%%%%%%%%THIS HEADER WILL NOT APPEAR ON ACTUAL RUN%%%%%%%%%%
% Last tested on:
% Fri Feb  6 11:54:14 EST 2004
% With:
% Dimsym.2.3
% Running on:
% Reduce.3.7
%%%%%%%%%%%%%%%%%%%%%END HEADER%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Loading image file: /home/zib/reduce/lisp/psl/alphalinux/red/reduce.img 
REDUCE 3.7, 15-Apr-1999 ...

1: %out "output.canjustres"$

%canjust

%load packages
load dimsym23$

Dimsym 2.3, 12-October-1999. 
Symmetry determination and linear D.E. package
(c) 1992, 1993 James Sherring; 1997 James Sherring and Geoff Prince
Any publication resulting from these calculations must reference this program.
Users are free to modify this program but it is not to be redistributed
in modified form.


loaddeq(u(1,1)=
         (  u(1,2)*u(2,1)*u(1,3)*u(3,1) 
          - u(2,3)*u(3,2)* ( u(3,1)**2 + u(2,1)**2 )
          )
          / (u(1,2)*u(2,3)*u(3,1)+u(1,3)*u(3,2)*u(2,1) )
          );


1


loaddeq( u(2,2)=
        (u(1,2)*u(2,1)*u(2,3)*u(3,2) -u(1,3)*u(3,1)*(u(1,2)**2 + 
          u(3,2)**2))/(u(1,2)*u(2,3)*u(3,1)+U(1,3)*U(3,2)*U(2,1)));


2


loaddeq( u(3,3)=
         (u(1,3)*u(3,1)*u(2,3)*u(3,2) - u(1,2)*u(2,1)*(u(1,3)**2
        + u(2,3)**2))/(u(1,2)*u(2,3)*u(3,1)+u(1,3)*u(3,2)*u(2,1)));


3


mkdets(point);

Equation for (u 1 1) is not strictly in semi-standard form, 
because it should be solved for (u 3 2) as leading derivative, 
which is nominally ordered higher than (u 1 1), although this should be ok.

Equation for (u 2 2) is not strictly in semi-standard form, 
because it should be solved for (u 3 2) as leading derivative, 
which is nominally ordered higher than (u 2 2), although this should be ok.


solvedets(std);

Solving equations using std algorithm.


made eqn 273 from integrability conditions on eqns 166 and 234 for (df (phi 1) (
u 3) (u 2))

made eqn 274 from integrability conditions on eqns 235 and 236 for (df (phi 2) (
u 3) (u 2))

made eqn 277 from integrability conditions on eqns 167 and 275 for (df (phi 3) (
u 3) (u 2) (u 1))

made eqn 278 from integrability conditions on eqns 167 and 276 for (df (phi 3) (
u 3) (u 2) 2)

made eqn 279 from integrability conditions on eqns 275 and 276 for (df (phi 3) (
u 2) 2 (u 1))

There are 0 equations remaining.


mkgens();


There are 13 symmetries found.

The generators of the finite algebra are:

Gen(1) = @
          u(2)

Gen(2) = @    *u(2) - @    *u(3)
          u(3)         u(2)

Gen(3) = @
          u(3)

                      2             2             2
Gen(4) =  - @    *u(3)  + @    *u(2)  + @    *u(1)  - 2*@    *u(3)*u(2)
             u(3)          u(3)          u(3)            u(2)

          - 2*@    *u(3)*u(1)
               u(1)

Gen(5) = @    *u(1) - @    *u(3)
          u(3)         u(1)

                                                           2             2
Gen(6) = 2*@    *u(3)*u(1) + 2*@    *u(2)*u(1) - @    *u(3)  - @    *u(2)
            u(3)                u(2)              u(1)          u(1)

                      2
          + @    *u(1)
             u(1)

                                       2             2             2
Gen(7) = 2*@    *u(3)*u(2) - @    *u(3)  + @    *u(2)  - @    *u(1)
            u(3)              u(2)          u(2)          u(2)

          + 2*@    *u(2)*u(1)
               u(1)

Gen(8) = @    *u(3) + @    *u(2) + @    *u(1)
          u(3)         u(2)         u(1)

Gen(9) = @
          u(1)

Gen(10) =  - @    *u(1) + @    *u(2)
              u(2)         u(1)

The generators of the infinite algebra are:

Gen (11) = @    *xi(1)
            x(1)

Gen (12) = @    *xi(3)
            x(3)

Gen (13) = @    *xi(2)
            x(2)

(xi 3) depends on ((x 3))
(xi 2) depends on ((x 2))
(xi 1) depends on ((x 1))

stats();


Time: 1690 ms  plus GC time: 112 ms

Total of 321 equations used, with 20 new arbitrary functions made.

successful operations were :((op*intslv 8) (op*simpeq 89) (op*shr1tm 27) (
op*splitec 78) (op*exp1tm 4) (addintcons 2) (op*sub2sf 4) (op*proexp 3))

Variables used to split determining equations were ((u 2) (u 1) (u 1 2) (u 2 3)
(u 1 3) (u 2 1) (u 3 1) (u 3 2))


%shut "output.canjustres"$

end$

2: 
3: 
4: 
5: 
6: 
*** End-of-file read 

Quitting
