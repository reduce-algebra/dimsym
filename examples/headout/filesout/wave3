%%%%%%%%%%THIS HEADER WILL NOT APPEAR ON ACTUAL RUN%%%%%%%%%%
% Last tested on:
% Fri Feb  6 11:54:14 EST 2004
% With:
% Dimsym.2.3
% Running on:
% Reduce.3.7
%%%%%%%%%%%%%%%%%%%%%END HEADER%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Loading image file: /home/zib/reduce/lisp/psl/alphalinux/red/reduce.img 
REDUCE 3.7, 15-Apr-1999 ...

1: %out "output.wave3";

%wave3

%load packages
load dimsym23$

Dimsym 2.3, 12-October-1999. 
Symmetry determination and linear D.E. package
(c) 1992, 1993 James Sherring; 1997 James Sherring and Geoff Prince
Any publication resulting from these calculations must reference this program.
Users are free to modify this program but it is not to be redistributed
in modified form.


loaddeq ( u(1,1,1) = u(1,4,4) - u(1,2,2) - u(1,3,3));


1
 

mkdets(point);

Equation for (u 1 1 1) is not strictly in semi-standard form, 
because it should be solved for (u 1 4 4) as leading derivative, 
which is nominally ordered higher than (u 1 1 1), although this should be ok.

  
solvedets(std);

Solving equations using std algorithm.


There are 1 equations remaining.
The equationgroup numbers of equations remaining are (65)

showdets();

There are 1 determining equations remaining, which are...

deteqn(1)=df(c(1),x(4),2) - df(c(1),x(3),2) - df(c(1),x(2),2) - df(c(1),x(1),2)

The remaining dependencies are ...

(c 1) depends on ((x 1) (x 2) (x 3) (x 4))

The dunkns in the remaining equations are: ((c 1))

The leading derivatives are: ((df (c 1) (x 4) 2))

The parametric derviatives in the remaining equations are:
((df (c 1) (x 1) 2) (df (c 1) (x 2) 2) (df (c 1) (x 3) 2))


mkgens();


There are 17 symmetries found.

The generators of the finite algebra are:

                                                              2             2
Gen(1) =  - 2*@    *u(1)*x(3) + 2*@    *x(4)*x(3) + @    *x(4)  + @    *x(3)
               u(1)                x(4)              x(3)          x(3)

                      2             2
          - @    *x(2)  - @    *x(1)  + 2*@    *x(3)*x(2) + 2*@    *x(3)*x(1)
             x(3)          x(3)            x(2)                x(1)

Gen(2) =  - @    *u(1) + @    *x(4) + @    *x(3) + @    *x(2) + @    *x(1)
             u(1)         x(4)         x(3)         x(2)         x(1)

                                          2             2             2
Gen(3) =  - 2*@    *u(1)*x(4) + @    *x(4)  + @    *x(3)  + @    *x(2)
               u(1)              x(4)          x(4)          x(4)

                      2
          + @    *x(1)  + 2*@    *x(4)*x(3) + 2*@    *x(4)*x(2)
             x(4)            x(3)                x(2)

          + 2*@    *x(4)*x(1)
               x(1)

Gen(4) =  - @    *x(1) + @    *x(3)
             x(3)         x(1)

Gen(5) = @
          x(1)

Gen(6) =  - 2*@    *u(1)*x(2) + 2*@    *x(4)*x(2) + 2*@    *x(3)*x(2)
               u(1)                x(4)                x(3)

                      2             2             2             2
          + @    *x(4)  - @    *x(3)  + @    *x(2)  - @    *x(1)
             x(2)          x(2)          x(2)          x(2)

          + 2*@    *x(2)*x(1)
               x(1)

Gen(7) = @    *x(1) + @    *x(4)
          x(4)         x(1)

Gen(8) =  - 2*@    *u(1)*x(1) + 2*@    *x(4)*x(1) + 2*@    *x(3)*x(1)
               u(1)                x(4)                x(3)

                                          2             2             2
          + 2*@    *x(2)*x(1) + @    *x(4)  - @    *x(3)  - @    *x(2)
               x(2)              x(1)          x(1)          x(1)

                      2
          + @    *x(1)
             x(1)

Gen(9) =  - @    *x(1) + @    *x(2)
             x(2)         x(1)

Gen(10) = @
           x(3)

Gen(11) = @    *x(3) + @    *x(4)
           x(4)         x(3)

Gen(12) = @    *u(1)
           u(1)

Gen(13) = @
           x(4)

Gen(14) = @    *x(2) + @    *x(4)
           x(4)         x(2)

Gen(15) = @    *x(2) - @    *x(3)
           x(3)         x(2)

Gen(16) = @
           x(2)

The generators for the remaining equations are:

(The unknowns in these generators satisfy the remaining determining equations.)

Gen (17) = @    *c(1)
            u(1)

(c 1) depends on ((x 1) (x 2) (x 3) (x 4))

stats();


Time: 1092 ms  plus GC time: 38 ms

Total of 282 equations used, with 49 new arbitrary functions made.

successful operations were :((op*intslv 21) (op*shr1tm 19) (op*splitec 53) (
op*simpeq 150) (op*exp1tm 8) (op*slvspl 1) (op*sub2sf 8) (op*proexp 1))

Variables used to split determining equations were ((x 3) (x 4) (x 2) (x 1) (u 1
) (u 1 2 1) (u 1 2 2) (u 1 3 1) (u 1 3 2) (u 1 3 3) (u 1 4 1) (u 1 4 2) (u 1 4 3
) (u 1 4 4) (u 1 1) (u 1 2) (u 1 3) (u 1 4))


%shut "output.wave3";

end;

2: 
3: 
4: 
5: 
6: 
*** End-of-file read 

Quitting
